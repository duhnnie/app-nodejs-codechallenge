version: "3.7"
services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=yapeuser
      - POSTGRES_PASSWORD=yapassword
      - POSTGRES_DB=yape
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092

  kafka-init:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      kafka:
        condition: service_started
    environment:
      TOPICS: "yape_pending,yape_reviewed"
      REPLICATION_FACTOR: "1,1"
      PARTITIONS_COUNT: "14,14"
      ZOOKEEPER_HOST_PORT: "zookeeper:2181"
    command: ["/bin/bash", "-C", "./create-topics.sh"]
    volumes:
      - type: bind
        source: ./scripts/create-topics.sh
        target: /create-topics.sh
    init: true

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    environment:
      # SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "localhost:9092"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 5

  antifraud:
    build:
      context: ./antifraud
    depends_on:
      # kafka
      schema-registry:
        condition: service_healthy
    environment:
      YAPE_ANTIFRAUD_KAFKA_BROKERS: "kafka:29092"
      YAPE_ANTIFRAUD_KAFKA_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      YAPE_ANTIFRAUD_KAFKA_READ_TOPIC: "yape_pending"
      YAPE_ANTIFRAUD_KAFKA_WRITE_TOPIC: "yape_reviewed"
      YAPE_ANTIFRAUD_KAFKA_CONSUMER_GROUP_ID: "yape-antifraud-service"

  transaction:
    build:
      context: ./transaction
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports:
      - 3000:3000
    environment:
      YAPE_TRANSACTION_DATABASE_URL: "postgresql://yapeuser:yapassword@postgres:5432/yape?schema: public"
      YAPE_ANTIFRAUD_KAFKA_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      YAPE_TRANSACTION_KAFKA_CLIENT_ID: "yape_transaction_service"
      YAPE_TRANSACTION_KAFKA_BROKERS: "kafka:29092"
      YAPE_TRANSACTION_KAFKA_CONSUMER_GROUP_ID: "yape_transaction_consumer_group"
      YAPE_TRANSACTION_KAFKA_READ_TOPIC: "yape_reviewed"
      YAPE_TRANSACTION_KAFKA_WRITE_TOPIC: "yape_pending"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 30s

  graphql:
    build:
      context: ./graphql
    depends_on:
      transaction:
        condition: service_healthy
    ports:
      - 4000:4000
    environment:
      YAPE_GRAPHQL_PORT: 4000
      YAPE_TRANSACTION_API_URL: "http://transaction:3000"